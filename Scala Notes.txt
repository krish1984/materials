About Variables:
---------------------------------
variables are simply declared in javascript style: 
Ex: var name = "Krishna";

variables with type are declared in javascript + SQL style: 
var name:String = "Krishna";
Two types are variables : val & var


About methods: 
----------------------------------
--> method parameters are by default vals.(finals)
Ex:
def name(age:Integer) : Unit = {
 // age is final
}

--> return  statement in the method body is optional, it is inferred.(automatically known). But it does not work in some cases as it leads toambiguity to scala:
ex:
 print(findFactorial(5))
  def findFactorial(no:Integer): Integer = {
    if(no==1){
       no;
    }
     no*findFactorial(no-1);
    
  }
  
  In the above case, it leads to stack overflow error, but the following works:
  def findFactorial(no:Integer): Integer = {
    if(no==1){
      return  no;
    }
    return no*findFactorial(no-1);
    
  }
  

--> return  type declaration for a method is also optional, it is inferred.(automatically known)
--> for(e <- numbers){
      println(e + sayHello(e.toString()));
    }
	
--> 

About Loops:
-------------------
for(p <- persons){
	//.....
}

for(i in 1 to 10){

}

Arrays:
Array<String> != Array[String]
Array[Integer]

  var ages = new Array[Integer](3);
  ages(0)=12;
  
  or
  var ages = Array(15,16);
  
  // Print all the array elements
      for ( x <- ages ) {
         println( x )
      }

      // Summing all elements
      var total = 0.0;
      
      for ( i <- 0 to (ages.length - 1)) {
         total += ages(i);
      }



Classes, Constructors:
--------------------------------------
You can extend a base Scala class and you can design an inherited class in the same way you do it in Java (use extends key word), but there are two restrictions: method overriding requires the override keyword, and only the primary constructor can pass parameters to the base constructor.


No Run as Scala is Displayed:
Reason:
Make sure there are no method calls or any thing whose value is not used. It must be either printed or used in some calc.
Hello has a main method with parameter type Array[String], but com.cts.Hello will not be a runnable program. Reason: main method must have exact signature (Array[String])Unit